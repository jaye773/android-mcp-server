[tool:pytest]
# Basic Configuration
minversion = 6.0
addopts =
    -ra
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --asyncio-mode=auto
    -v

# Test Discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Test
python_functions = test_*

# Markers
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests with mocked external services
    e2e: End-to-end tests requiring full system
    slow: Tests that take significant time to run
    device: Tests that would require actual Android device (mocked in CI)
    adb: Tests involving ADB operations
    ui: Tests for UI interaction functionality
    media: Tests for media capture functionality
    validation: Tests for input validation system
    error_handling: Tests for error handling system

# Asyncio Configuration
asyncio_mode = auto

# Coverage Configuration
[coverage:run]
source = src
omit =
    */tests/*
    */test_*
    */.venv/*
    */venv/*
    setup.py

[coverage:report]
omit =
    tests/*
    */tests/*
    test_scripts/*
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
